---
name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  SCRIPTS_NO_INTERACTIVE: 'true'

defaults:
  run:
    shell: bash

jobs:
  golang:
    name: Golang
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Golang
        uses: actions/setup-go@v2
        with:
          go-version: '^1.16'
      - name: Build
        run: |
          make
          git --no-pager diff -- ':(exclude)go.sum' && git diff --quiet -- ':(exclude)go.sum'
      - name: Codecov
        uses: codecov/codecov-action@v1

  package:
    name: Docker
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Golang
        uses: actions/setup-go@v2
        with:
          go-version: '^1.16'
      - name: Build
        run: |
          curl -q -sSL --max-time 30 "https://raw.githubusercontent.com/ViBiOh/scripts/main/bootstrap" | bash -s "release"
          ./scripts/release build
      - name: Setup Docker
        uses: docker/setup-buildx-action@v1
      - name: Setup DockerHub
        if: env.DOCKER_USER && env.DOCKER_PASS
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}
      - name: Docker
        if: env.DOCKER_USER && env.DOCKER_PASS
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
        run: |
          DOCKER_IMAGE="${{ secrets.DOCKER_USER }}/$(make name)-api" IMAGE_VERSION="$(make version)" DOCKERFILE=Dockerfile_api ./scripts/release docker
          DOCKER_IMAGE="${{ secrets.DOCKER_USER }}/$(make name)-notifier" IMAGE_VERSION="$(make version)" DOCKERFILE=Dockerfile_notifier ./scripts/release docker

  javascript:
    name: Javascript
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup NodeJS
        uses: actions/setup-node@v2-beta
        with:
          node-version: '15'
      - name: Build
        run: |
          npm ci
          npm run format
          npm run style
          npm test
          npm run build
          ./remove_hash_from_asset.js "$(make version)"
          git --no-pager diff && git diff --quiet
      - name: Setup Docker
        uses: docker/setup-buildx-action@v1
      - name: Setup DockerHub
        if: env.DOCKER_USER && env.DOCKER_PASS
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}
      - name: Docker
        if: env.DOCKER_USER && env.DOCKER_PASS
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
        run: |
          curl -q -sSL --max-time 30 "https://raw.githubusercontent.com/ViBiOh/scripts/main/bootstrap" | bash -s "release"
          DOCKER_IMAGE="${{ secrets.DOCKER_USER }}/$(make name)-ui" IMAGE_VERSION="$(make version)" DOCKERFILE=Dockerfile_ui ./scripts/release docker

  publish:
    name: Publish
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(toJSON(github.event.commits.*.message), '[skip ci]')
    runs-on: ubuntu-latest
    needs:
      - package
      - javascript
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Publish
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
        run: |
          curl -q -sSL --max-time 30 "https://raw.githubusercontent.com/ViBiOh/scripts/main/bootstrap" | bash -s "docker_promote"
          scripts/docker_promote "${{ secrets.DOCKER_USER }}/$(make name)-api" "$(make version)"
          scripts/docker_promote "${{ secrets.DOCKER_USER }}/$(make name)-notifier" "$(make version)"
          scripts/docker_promote "${{ secrets.DOCKER_USER }}/$(make name)-ui" "$(make version)"
      - name: Flux
        env:
          FLUX_TOKEN: ${{ secrets.FLUX_TOKEN }}
          FLUX_WEBHOOK_URL: ${{ secrets.FLUX_WEBHOOK_URL }}
        run: |
          curl --disable --silent --show-error --location --max-time 30 --header "X-Signature: sha1=$(printf "{}" | openssl dgst -sha1 -r -hmac "${FLUX_TOKEN}"| awk '{print $1}')" --data "{}" "${FLUX_WEBHOOK_URL}"
      - name: GoReport
        run: |
          curl -q -sSL --max-time 30 -X POST https://goreportcard.com/checks?repo=github.com/${GITHUB_REPOSITORY}
          curl -q -sSL --max-time 30 -X POST --data-urlencode "gitUrl=git@github.com:${GITHUB_REPOSITORY}.git" https://doc.esdoc.org/api/create
