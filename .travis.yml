---

jobs:
  include:
    - stage: Build

      sudo: required
      language: minimal
      services:
        - docker
      script: |
        docker build --build-arg CODECOV_TOKEN --build-arg "APP_VERSION=$(make version)" --target api -t "${DOCKER_USER}/$(make name)-api:$(make version)" -f Dockerfile_api .
        docker build --target notifier -t "${DOCKER_USER}/$(make name)-notifier:$(make version)" -f Dockerfile_api .
      after_success:
        - echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin
        - docker push "${DOCKER_USER}/$(make name)-api:$(make version)"
        - docker push "${DOCKER_USER}/$(make name)-notifier:$(make version)"

    - stage: Build

      sudo: required
      language: minimal
      services:
        - docker
      script: docker build --build-arg CODECOV_TOKEN --build-arg "APP_VERSION=$(make version)" -t "${DOCKER_USER}/$(make name)-ui:$(make version)" -f Dockerfile_ui .
      after_success:
        - echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin
        - docker push "${DOCKER_USER}/$(make name)-ui:$(make version)"

    - stage: Publish

      sudo: required
      language: minimal
      services:
        - docker
      script:
        - export APP_NAME="$(make name)"
        - export APP_VERSION="$(make version)"
        - echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin
        - curl -q -sSL --max-time 10 "https://raw.githubusercontent.com/ViBiOh/scripts/master/bootstrap" | bash -s "docker_promote"
        - scripts/docker_promote "${DOCKER_USER}/${APP_NAME}-api" "$(make version)"
        - scripts/docker_promote "${DOCKER_USER}/${APP_NAME}-notifier" "$(make version)"
        - scripts/docker_promote "${DOCKER_USER}/${APP_NAME}-ui" "$(make version)"
      after_success:
        - curl -q -sSL --max-time 10 -X POST https://goreportcard.com/checks?repo=github.com/${TRAVIS_REPO_SLUG}
        - curl -q -SSL --max-time 10 -X POST --data-urlencode "gitUrl=git@github.com:${TRAVIS_REPO_SLUG}.git" https://doc.esdoc.org/api/create

    - stage: Deploy

      language: minimal
      script:
        - curl -q -sSL --max-time 10 "https://raw.githubusercontent.com/ViBiOh/scripts/master/bootstrap" | bash -s "deploy" "env_replace"
        - scripts/env_replace docker-compose.yml DOCKER_USER PERFORMANCE_URL FUNDS_DATABASE_HOST FUNDS_DATABASE_USER FUNDS_DATABASE_PASS FUNDS_DATABASE_NAME FUNDS_NOTIFICATION_RECIPIENTS MAILER_USER MAILER_PASS | sed "s|\\\$|\$\$|g" > docker-compose-env.yml
        - scripts/deploy "$(make name)" "@docker-compose-env.yml"

stages:
  - Build
  - name: Publish
    if: branch = master && type = push
  - name: Deploy
    if: branch = master && type = push

notifications:
  email: false
